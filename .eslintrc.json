{
    // среда исполнения кода
    "env": {
        "browser": true,
        "es2021": true
    },
    // пресет с настройками. Prettier - последний, т.к. удаляет некоторые конфликты eslint
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "airbnb",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 12,
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "only-warn",
        "@typescript-eslint",
        "prettier"
    ],
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [
                    ".js", ".jsx", ".ts", ".tsx", ".json"
                ]
            }}},
    "rules": {
        "prettier/prettier": ["warn", {
            "singleQuote": true,
            "semi": true
        }],
        "linebreak-style": 0,
        "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
        "no-unused-expressions": ["error", {
            "allowShortCircuit": true,
            "allowTernary": true,
            "allowTaggedTemplates": true
        }],
        "no-underscore-dangle": "off",
        "react/no-array-index-key": "off",
        "import/prefer-default-export": "off",
        "react/prop-types": "off",
        "react/require-default-props": "off",
        "jsx-a11y/label-has-associated-control": ["error", {
            "required": {
                "some": ["nesting", "id"]
            }
        }],
        "jsx-a11y/label-has-for": ["error", {
            "required": {
                "some": ["nesting", "id"]
            }
        }],
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"]
    },
    "overrides": [
        {
            // feel free to replace with your preferred file pattern - eg. 'src/**/*Slice.ts'
            "files": ["src/**/*Slice/*"],
            // avoid state param assignment
            "rules": { "no-param-reassign": ["error", { "props": false }] }
        }
    ]
}
